{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","GiftExpertApp","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAZW,SAAAC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCFJO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAcvC,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCf,KAAMkB,EACNL,SAAS,SAEd,CAACpB,IAEGqB,EDVyBK,CAAc1B,GAAjCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QAErB,OACI,qCACA,oBAAIJ,UAAU,yCAAd,SAAyDhB,IACxDoB,GAAW,mBAAGJ,UAAU,wCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEbd,SAASgB,IAAiB,IAAD,EAEAzC,mBAAS,CAAC,gBAFV,mBAE7B0C,EAF6B,KAEjB3C,EAFiB,KAIpC,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,W,UCLV6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAACX,EAAD,IACAY,SAASC,eAAe,SAM5BX,M","file":"static/js/main.b22673aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = e => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = e => {\n\n        e.preventDefault()\n\n        if( inputValue.trim().length > 2 ){\n            setCategories(cats => [inputValue, ...cats])\n            setInputValue('')\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=4p7UCjtU7XRXXII7c3TFv7yD9VcgwLqe`\n    const resp = await fetch(url)\n    const { data } = await resp.json()\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n   \n    return gifs\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts'\n// import { getGifs } from '../helpers/getGifts'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GiftGrid = ({category}) => {\n    \n\n    const {data: images, loading} = useFetchGifts(category)\n\n    return (\n        <>\n        <h3 className=\"card animate__animated animate__bounce\">{ category }</h3>\n        {loading && <p className=\"card animate__animated animate__flash\">Cargando...</p>  }\n        <div className=\"card-grid\">\n            {images.map(img => Â (\n                <GifGridItem \n                    key={img.id}\n                    {...img}\n                />\n            ))}\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifts'\n\n\nexport const useFetchGifts = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect(() => {\n        getGifs(category).then(imgs => setstate({\n            data: imgs,\n            loading: false,\n        }))\n    }, [category])\n\n    return state\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\nexport default function GiftExpertApp() {\n\n    const [categories, setCategories] = useState(['Dragon Ball'])\n       \n    return (\n        <>\n        <h2>GiftExpertApp</h2>\n        <AddCategory setCategories={ setCategories }/>\n        <hr/>\n        <ol>\n            {\n            categories.map(category => (\n                <GiftGrid \n                    key={category}\n                    category={category}\n                />\n            ))\n            }\n        </ol>\n        </>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}